{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maxime/Documents/Mes_projets/EPSI/YamMaster/yam-master-app/app/components/board/decks/player-deck.component.js\",\n  _this = this;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SocketContext } from \"../../../contexts/socket.context\";\nimport Dice from \"./dice.component\";\nimport Roll from \"./roll.component\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PlayerDeck = function PlayerDeck() {\n  var socket = useContext(SocketContext);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    displayPlayerDeck = _useState2[0],\n    setDisplayPlayerDeck = _useState2[1];\n  var _useState3 = useState(Array(5).fill(false)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dices = _useState4[0],\n    setDices = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    displayRollButton = _useState6[0],\n    setDisplayRollButton = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    rollsCounter = _useState8[0],\n    setRollsCounter = _useState8[1];\n  var _useState9 = useState(3),\n    _useState10 = _slicedToArray(_useState9, 2),\n    rollsMaximum = _useState10[0],\n    setRollsMaximum = _useState10[1];\n  useEffect(function () {\n    socket.on(\"game.deck.view-state\", function (data) {\n      setDisplayPlayerDeck(data['displayPlayerDeck']);\n      if (data['displayPlayerDeck']) {\n        setDisplayRollButton(data['displayRollButton']);\n        setRollsCounter(data['rollsCounter']);\n        setRollsMaximum(data['rollsMaximum']);\n        setDices(data['dices']);\n      }\n    });\n  }, []);\n  var toggleDiceLock = function toggleDiceLock(index) {\n    var newDices = _toConsumableArray(dices);\n    if (newDices[index].value !== '' && displayRollButton) {\n      socket.emit(\"game.dices.lock\", newDices[index].id);\n    }\n  };\n  var rollDices = function rollDices() {\n    if (rollsCounter <= rollsMaximum) {\n      socket.emit(\"game.dices.roll\");\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.deckPlayerContainer,\n    children: displayPlayerDeck && _jsxDEV(_Fragment, {\n      children: [displayRollButton && _jsxDEV(_Fragment, {\n        children: _jsxDEV(View, {\n          style: styles.rollInfoContainer,\n          children: _jsxDEV(Text, {\n            style: styles.rollInfoText,\n            children: [\"Lancer \", rollsCounter, \" / \", rollsMaximum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false), _jsxDEV(View, {\n        style: styles.diceContainer,\n        children: dices.map(function (diceData, index) {\n          return _jsxDEV(Dice, {\n            index: index,\n            locked: diceData.locked,\n            value: diceData.value,\n            onPress: toggleDiceLock\n          }, diceData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, _this), displayRollButton && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(TouchableOpacity, {\n          style: styles.rollButton,\n          onPress: rollDices,\n          children: _jsxDEV(Text, {\n            style: styles.rollButtonText,\n            children: \"Roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, _this), _jsxDEV(Roll, {\n          handlePress: rollDices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, _this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  deckPlayerContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottomWidth: 1,\n    borderColor: \"black\"\n  },\n  rollInfoContainer: {\n    marginBottom: 10\n  },\n  rollInfoText: {\n    fontSize: 14,\n    fontStyle: \"italic\"\n  },\n  diceContainer: {\n    flexDirection: \"row\",\n    width: \"70%\",\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  rollButton: {\n    width: \"30%\",\n    backgroundColor: \"green\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"black\"\n  },\n  rollButtonText: {\n    fontSize: 18,\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});\nexport default PlayerDeck;","map":{"version":3,"names":["React","useState","useContext","useEffect","View","TouchableOpacity","Text","StyleSheet","SocketContext","Dice","Roll","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerDeck","socket","_useState","_useState2","_slicedToArray","displayPlayerDeck","setDisplayPlayerDeck","_useState3","Array","fill","_useState4","dices","setDices","_useState5","_useState6","displayRollButton","setDisplayRollButton","_useState7","_useState8","rollsCounter","setRollsCounter","_useState9","_useState10","rollsMaximum","setRollsMaximum","on","data","toggleDiceLock","index","newDices","_toConsumableArray","value","emit","id","rollDices","style","styles","deckPlayerContainer","children","rollInfoContainer","rollInfoText","fileName","_jsxFileName","lineNumber","columnNumber","_this","diceContainer","map","diceData","locked","onPress","rollButton","rollButtonText","handlePress","create","flex","justifyContent","alignItems","borderBottomWidth","borderColor","marginBottom","fontSize","fontStyle","flexDirection","width","backgroundColor","paddingVertical","borderRadius","color","fontWeight"],"sources":["/Users/maxime/Documents/Mes_projets/EPSI/YamMaster/yam-master-app/app/components/board/decks/player-deck.component.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { View, TouchableOpacity, Text, StyleSheet } from \"react-native\";\nimport { SocketContext } from \"../../../contexts/socket.context\";\nimport Dice from \"./dice.component\";\nimport Roll from \"./roll.component\";\n\nconst PlayerDeck = () => {\n    const socket = useContext(SocketContext);\n    const [displayPlayerDeck, setDisplayPlayerDeck] = useState(false);\n    const [dices, setDices] = useState(Array(5).fill(false));\n    const [displayRollButton, setDisplayRollButton] = useState(false);\n    const [rollsCounter, setRollsCounter] = useState(0);\n    const [rollsMaximum, setRollsMaximum] = useState(3);\n\n    useEffect(() => {\n        socket.on(\"game.deck.view-state\", (data) => {\n            setDisplayPlayerDeck(data['displayPlayerDeck']);\n            if (data['displayPlayerDeck']) {\n                setDisplayRollButton(data['displayRollButton']);\n                setRollsCounter(data['rollsCounter']);\n                setRollsMaximum(data['rollsMaximum']);\n                setDices(data['dices']);\n            }\n        });\n    }, []);\n\n    const toggleDiceLock = (index) => {\n        const newDices = [...dices];\n        if (newDices[index].value !== '' && displayRollButton) {\n            socket.emit(\"game.dices.lock\", newDices[index].id);\n        }\n    };\n\n    const rollDices = () => {\n        if (rollsCounter <= rollsMaximum) {\n            socket.emit(\"game.dices.roll\");\n        }\n    };\n\n    return (\n        <View style={styles.deckPlayerContainer}>\n\n            {displayPlayerDeck && (\n\n                <>\n                    {displayRollButton && (\n\n                        <>\n                            <View style={styles.rollInfoContainer}>\n                                <Text style={styles.rollInfoText}>\n                                    Lancer {rollsCounter} / {rollsMaximum}\n                                </Text>\n                            </View>\n                        </>\n\n                    )}\n\n                    <View style={styles.diceContainer}>\n                        {dices.map((diceData, index) => (\n                            <Dice\n                                key={diceData.id}\n                                index={index}\n                                locked={diceData.locked}\n                                value={diceData.value}\n                                onPress={toggleDiceLock}\n                            />\n                        ))}\n                    </View>\n\n                    {displayRollButton && (\n\n                        <>\n                            <TouchableOpacity style={styles.rollButton} onPress={rollDices}>\n                                <Text style={styles.rollButtonText}>Roll</Text>\n                            </TouchableOpacity>\n                            <Roll handlePress={rollDices} />\n                        </>\n\n                    )}\n                </>\n            )}\n\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    deckPlayerContainer: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderBottomWidth: 1,\n        borderColor: \"black\"\n    },\n    rollInfoContainer: {\n        marginBottom: 10,\n    },\n    rollInfoText: {\n        fontSize: 14,\n        fontStyle: \"italic\",\n    },\n    diceContainer: {\n        flexDirection: \"row\",\n        width: \"70%\",\n        justifyContent: \"space-between\",\n        marginBottom: 10,\n    },\n    rollButton: {\n        width: \"30%\",\n        backgroundColor: \"green\",\n        paddingVertical: 10,\n        borderRadius: 5,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"black\"\n    },\n    rollButtonText: {\n        fontSize: 18,\n        color: \"white\",\n        fontWeight: \"bold\",\n    },\n});\n\nexport default PlayerDeck;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE/D,SAASC,aAAa,QAAQ,kCAAkC;AAChE,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACrB,IAAMC,MAAM,GAAGd,UAAU,CAACM,aAAa,CAAC;EACxC,IAAAS,SAAA,GAAkDhB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAC9C,IAAAI,UAAA,GAA0BrB,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;IAAAC,UAAA,GAAAN,cAAA,CAAAG,UAAA;IAAjDI,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAkD3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAV,cAAA,CAAAS,UAAA;IAA1DE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAC9C,IAAAG,UAAA,GAAwC/B,QAAQ,CAAC,CAAC,CAAC;IAAAgC,UAAA,GAAAd,cAAA,CAAAa,UAAA;IAA5CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAwCnC,QAAQ,CAAC,CAAC,CAAC;IAAAoC,WAAA,GAAAlB,cAAA,CAAAiB,UAAA;IAA5CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpClC,SAAS,CAAC,YAAM;IACZa,MAAM,CAACwB,EAAE,CAAC,sBAAsB,EAAE,UAACC,IAAI,EAAK;MACxCpB,oBAAoB,CAACoB,IAAI,CAAC,mBAAmB,CAAC,CAAC;MAC/C,IAAIA,IAAI,CAAC,mBAAmB,CAAC,EAAE;QAC3BV,oBAAoB,CAACU,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC/CN,eAAe,CAACM,IAAI,CAAC,cAAc,CAAC,CAAC;QACrCF,eAAe,CAACE,IAAI,CAAC,cAAc,CAAC,CAAC;QACrCd,QAAQ,CAACc,IAAI,CAAC,OAAO,CAAC,CAAC;MAC3B;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAK;IAC9B,IAAMC,QAAQ,GAAAC,kBAAA,CAAOnB,KAAK,CAAC;IAC3B,IAAIkB,QAAQ,CAACD,KAAK,CAAC,CAACG,KAAK,KAAK,EAAE,IAAIhB,iBAAiB,EAAE;MACnDd,MAAM,CAAC+B,IAAI,CAAC,iBAAiB,EAAEH,QAAQ,CAACD,KAAK,CAAC,CAACK,EAAE,CAAC;IACtD;EACJ,CAAC;EAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACpB,IAAIf,YAAY,IAAII,YAAY,EAAE;MAC9BtB,MAAM,CAAC+B,IAAI,CAAC,iBAAiB,CAAC;IAClC;EACJ,CAAC;EAED,OACInC,OAAA,CAACR,IAAI;IAAC8C,KAAK,EAAEC,MAAM,CAACC,mBAAoB;IAAAC,QAAA,EAEnCjC,iBAAiB,IAEdR,OAAA,CAAAE,SAAA;MAAAuC,QAAA,GACKvB,iBAAiB,IAEdlB,OAAA,CAAAE,SAAA;QAAAuC,QAAA,EACIzC,OAAA,CAACR,IAAI;UAAC8C,KAAK,EAAEC,MAAM,CAACG,iBAAkB;UAAAD,QAAA,EAClCzC,OAAA,CAACN,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACI,YAAa;YAAAF,QAAA,GAAC,SACvB,EAACnB,YAAY,EAAC,KAAG,EAACI,YAAY;UAAA;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACnC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACL;MAAC,gBACT,CAEL,EAEDhD,OAAA,CAACR,IAAI;QAAC8C,KAAK,EAAEC,MAAM,CAACU,aAAc;QAAAR,QAAA,EAC7B3B,KAAK,CAACoC,GAAG,CAAC,UAACC,QAAQ,EAAEpB,KAAK;UAAA,OACvB/B,OAAA,CAACH,IAAI;YAEDkC,KAAK,EAAEA,KAAM;YACbqB,MAAM,EAAED,QAAQ,CAACC,MAAO;YACxBlB,KAAK,EAAEiB,QAAQ,CAACjB,KAAM;YACtBmB,OAAO,EAAEvB;UAAe,GAJnBqB,QAAQ,CAACf,EAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAKnB,CAAC;QAAA,CACL;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACA,CAAC,EAEN9B,iBAAiB,IAEdlB,OAAA,CAAAE,SAAA;QAAAuC,QAAA,GACIzC,OAAA,CAACP,gBAAgB;UAAC6C,KAAK,EAAEC,MAAM,CAACe,UAAW;UAACD,OAAO,EAAEhB,SAAU;UAAAI,QAAA,EAC3DzC,OAAA,CAACN,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACgB,cAAe;YAAAd,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAM;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACjC,CAAC,EACnBhD,OAAA,CAACF,IAAI;UAAC0D,WAAW,EAAEnB;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE,CAAC;MAAA,eAClC,CAEL;IAAA,eACH;EACL;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAEC,CAAC;AAEf,CAAC;AAED,IAAMT,MAAM,GAAG5C,UAAU,CAAC8D,MAAM,CAAC;EAC7BjB,mBAAmB,EAAE;IACjBkB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,WAAW,EAAE;EACjB,CAAC;EACDpB,iBAAiB,EAAE;IACfqB,YAAY,EAAE;EAClB,CAAC;EACDpB,YAAY,EAAE;IACVqB,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACf,CAAC;EACDhB,aAAa,EAAE;IACXiB,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE,KAAK;IACZR,cAAc,EAAE,eAAe;IAC/BI,YAAY,EAAE;EAClB,CAAC;EACDT,UAAU,EAAE;IACRa,KAAK,EAAE,KAAK;IACZC,eAAe,EAAE,OAAO;IACxBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACfX,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBQ,eAAe,EAAE;EACrB,CAAC;EACDb,cAAc,EAAE;IACZS,QAAQ,EAAE,EAAE;IACZO,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAerE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}